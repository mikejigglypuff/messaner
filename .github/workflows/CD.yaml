name: CD workflow

on:
  merge_group:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
      BUILD_FILE: 'messaner-0.0.1-SNAPSHOT.jar'
      BUILD_PATH: 'build/libs/messaner-0.0.1-SNAPSHOT.jar'
      DOCKER_IMG: 'messaner-img'
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Enable debug mode
        run: echo 'ACTIONS_RUNNER_DEBUG=true' >> $GITHUB_ENV

      - name: Set Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Add Setting files
        run: |
          cd src/main/resources
          echo '${{ secrets.DEV_PROPERTIES }}' > application-dev.properties
          echo '${{ secrets.TEST_PROPERTIES }}' > application-test.properties && ls -al
          cd react-dev && echo '${{ secrets.REACT_ENV }}' > .env && ls -al
          cd ../../../../

      - name: Check Files Before Build Image
        run: |
          ls -al ./ src/main/resources src/main/resources/react-dev

      - name: Build Docker Image
        run: docker build -t ${{ env.DOCKER_IMG }} .

      - name: Push the Docker image to Docker Hub
        run: |
          docker tag ${{ env.DOCKER_IMG }} ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMG }}

      - name: Deploy On EC2 Via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMG }}
            docker stop ${{ env.DOCKER_IMG }} || true
            docker rm ${{ env.DOCKER_IMG }} || true
            docker run -d --name ${{ env.DOCKER_IMG }} -p 80:8080 ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMG }}