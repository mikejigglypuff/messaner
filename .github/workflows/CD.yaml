name: CD workflow

on:
  merge_group:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
      BUILD_FILE: 'messaner-0.0.1-SNAPSHOT.jar'
      BUILD_PATH: 'build/libs/messaner-0.0.1-SNAPSHOT.jar'
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Enable debug mode
        run: echo 'ACTIONS_RUNNER_DEBUG=true' >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Add Setting files
        run: |
          cd src/main/resources
          echo '${{ secrets.DEV_PROPERTIES }}' > application-dev.properties
          echo '${{ secrets.TEST_PROPERTIES }}' > application-test.properties && ls -al
          cd react-dev && echo '${{ secrets.REACT_ENV }}' > .env && ls -al
          cd ../../../../

      - name: Set JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: 21
          architecture: x64

      - name: Set NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup React
        run: |
          cd src/main/resources/react-dev
          npm audit fix && npm install && npm run build 
          cd ../../../../

      - name: Setup Gradle
        env:
          MONGO_URI: ${{ secrets.MONGODB_URI }},
          MONGO_DBNAME: ${{ secrets.MONGODB_DBNAME }}
        run: |
          chmod +x ./gradlew
          ./gradlew build --exclude-task test --warning-mode=all --stacktrace 
          File='file:///home/runner/work/messaner/messaner/build/reports/***s/***/index.html'
          if [ -f '$FILE' ]; then
            cat '$FILE'
          else
            echo '$FILE does not exist.'
          fi
          chmod 755 ${{ env.BUILD_PATH }}

      - name: Check Files Before Transfer
        run: |
          ls -al build/libs src/main/resources build/resources/main

      - name: Copy JAR To EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          port: 22
          source: '${{ env.BUILD_PATH }}'
          target: '~/messaner'
          overwrite: true

      - name: Stop App Process
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            pgrep -f java | grep -v $$ | xargs -r kill

      - name: Deploy On EC2 Via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            export MONGO_URI=${{ secrets.MONGODB_URI }}
            export MONGO_DBNAME=${{ secrets.MONGODB_DBNAME }}
            nohup java -jar \
              -Dspring.profiles.active=dev \
              -Dapp.name=messaner \
            ~/messaner/${{ env.BUILD_PATH }} 1> ~/messaner/logs 2>&1 &